{"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\r\nconst chainIdToNetwork = {\r\n    1: 'mainnet',\r\n    3: 'ropsten',\r\n    4: 'rinkeby',\r\n    5: 'goerli',\r\n    42: 'kovan'\r\n};\r\nexport class AuthereumConnector extends AbstractConnector {\r\n    constructor({ chainId, config = {} }) {\r\n        super({ supportedChainIds: [chainId] });\r\n        this.chainId = chainId;\r\n        this.config = config;\r\n    }\r\n    async activate() {\r\n        if (!this.authereum) {\r\n            const { default: Authereum } = await import('authereum');\r\n            this.authereum = new Authereum({\r\n                networkName: chainIdToNetwork[this.chainId],\r\n                ...this.config\r\n            });\r\n        }\r\n        await this.authereum\r\n            .getProvider()\r\n            .enable()\r\n            .then((accounts) => accounts[0]);\r\n        return { provider: this.authereum.getProvider() };\r\n    }\r\n    async getProvider() {\r\n        return this.authereum.getProvider();\r\n    }\r\n    async getChainId() {\r\n        return this.authereum.getNetworkId();\r\n    }\r\n    async getAccount() {\r\n        return this.authereum.getAccountAddress();\r\n    }\r\n    deactivate() { }\r\n    async close() {\r\n        this.authereum.logout();\r\n        this.emitDeactivate();\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/home/mota/Sandbox/authereum/web3-react/packages/authereum-connector/node_modules/@web3-react/types/dist/index.d.ts","/home/mota/Sandbox/authereum/web3-react/packages/authereum-connector/node_modules/@web3-react/abstract-connector/dist/index.d.ts","/home/mota/Sandbox/authereum/web3-react/packages/authereum-connector/node_modules/authereum/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/index.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAA;AAElE,MAAM,gBAAgB,GAAkC;IACtD,CAAC,EAAE,SAAS;IACZ,CAAC,EAAE,SAAS;IACZ,CAAC,EAAE,SAAS;IACZ,CAAC,EAAE,QAAQ;IACX,EAAE,EAAE,OAAO;CACZ,CAAA;AAOD,MAAM,OAAO,kBAAmB,SAAQ,iBAAiB;IAMvD,YAAY,EAAE,OAAO,EAAE,MAAM,GAAG,EAAE,EAA+B;QAC/D,KAAK,CAAC,EAAE,iBAAiB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QAEvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAEM,KAAK,CAAC,QAAQ;QACnB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,CAAA;YACxD,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC;gBAC7B,WAAW,EAAE,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC3C,GAAG,IAAI,CAAC,MAAM;aACf,CAAC,CAAA;SACH;QAED,MAAM,IAAI,CAAC,SAAS;aACjB,WAAW,EAAE;aACb,MAAM,EAAE;aACR,IAAI,CAAC,CAAC,QAAkB,EAAU,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;QAEpD,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,CAAA;IACnD,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAA;IACrC,CAAC;IAEM,KAAK,CAAC,UAAU;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAA;IACtC,CAAC;IAEM,KAAK,CAAC,UAAU;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAA;IAC3C,CAAC;IAEM,UAAU,KAAI,CAAC;IAEf,KAAK,CAAC,KAAK;QAChB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAA;QACvB,IAAI,CAAC,cAAc,EAAE,CAAA;IACvB,CAAC;CACF\"}","dts":{"name":"/home/mota/Sandbox/authereum/web3-react/packages/authereum-connector/src/index.d.ts","writeByteOrderMark":false,"text":"import { ConnectorUpdate } from '@web3-react/types';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\ninterface AuthereumConnectorArguments {\r\n    chainId: number;\r\n    config?: any;\r\n}\r\nexport declare class AuthereumConnector extends AbstractConnector {\r\n    private readonly chainId;\r\n    private readonly config;\r\n    authereum: any;\r\n    constructor({ chainId, config }: AuthereumConnectorArguments);\r\n    activate(): Promise<ConnectorUpdate>;\r\n    getProvider(): Promise<any>;\r\n    getChainId(): Promise<number | string>;\r\n    getAccount(): Promise<null | string>;\r\n    deactivate(): void;\r\n    close(): Promise<void>;\r\n}\r\nexport {};\r\n"}}
